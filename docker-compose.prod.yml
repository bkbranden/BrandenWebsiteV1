version: '3'

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile-prod
    volumes:
      - './frontend:/app'
      - '/app/node_modules'
    ports:
      - '80:8080'
    environment:
      - NODE_ENV=development
    networks:
      - frontend
    depends_on:
      - apiservice

  apiservice:
    container_name: apiservice
    build: ./week2
    command: ash -c "gunicorn week2.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - ./week2:/app
    ports:
      - "8000:8000"
    environment:
      - SQL_ENGINE=django.db.backends.postgresql
      - SQL_DATABASE=django_dev
      - SQL_USER=django
      - SQL_PASSWORD=django
      - SQL_HOST=db
      - SQL_PORT=5432
    depends_on:
      - db
    env_file:
      - ./.env.prod
    networks:
      - frontend
      - backend
      
  db:
    container_name: database
    image: postgres:12.0-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_USER=django
      - POSTGRES_PASSWORD=django
      - POSTGRES_DB=django_dev
    ports:
      - '5432:5432'
    networks: 
      - backend

volumes:
  postgres_data:

networks:
  frontend: {}
  backend: {}